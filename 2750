//수 정렬하기 > 여기서는 버블정렬을 사용할 것 

//버블 정렬의 기본적인 코드 구현 

public class Main {


// >> Unlike top-level classes, inner classes can be STATIC 
// An instance(객체) of an inner class cannot be created without an instance of an outer class.
//Therefore, an inner class instance can access all of the members of its outer class, without using ref.
//IN STATIC CASES, ITS MUCH EASIER TO CREATE OBJECTS 

//if you use Static cases
// ex  버블 정렬 구현 코드 
 //private static void doSort();
 //이를 메인에서 사용할 때 , ----.doSort() 가 아닌 DOSORT() 자체로 사용 가능 
 //https://www.geeksforgeeks.org/static-class-in-java/
 


//공용적으로 사용할 배열 선언 (private static 이어야함 ) 
private static int arr[];
private static Scanner sc ;

public static void doSort(){

for(int i = 0 ; i < arr.length ; i ++ ){
  for(int j = arr.length - 1; j > 1 ; j --){
    if (arr[j] < arr[j-1]) swap(j);
    }
  }
}

public static void swap(int j){
int temp = arr[j];
arr[j] = arr[j-1];
arr[j-1] = temp;
  }
  
 public static void createArr(){
 makeArr();
 setArr();
 }
 
 public static void makeArr(){
 sc = new Scanner(System.in);
 int size = sc.nextInt();
 arr = new int[size];
 }
 
 public static void setArr(){
 for(int i=0; i<arr.length; i++ ) {
  arr[i] = sc.nextInt();
 }
 
 public static void print(){
 for(int i=0; i <arr.length; i++ ) {
 System.out.println(arr[i]);
  }
  
  }
 //버블 정렬의 특징 : 큰 시간복잡도 O(n^2)
 
 //삽입 정렬(내가 혼자 했당 ! ) 
 
 
 import java.util.Scanner;

public class BJoon {
	
	private static int[] arr;
	private static Scanner sc;

	
	public static void createArr() {
		makeArr();
		setArr();	
	}
	
	
	
	public static void makeArr() {
		sc = new Scanner(System.in);
		int size = sc.nextInt();
		arr = new int[size];
	}
	
	
	
	public static void setArr() {
		for( int i = 0 ; i < arr.length; i++) {
			arr[i] = sc.nextInt();
		}
	}
	
	public static void swap(int j) {
		int temp = arr[j];
		arr[j] = arr[j-1];
		arr[j-1] = temp ;
	}
	public static void doSort() {
		for(int i = 1 ; i <arr.length; i ++) {
			int std = arr[i];
			
			//오름차순 정렬 
			for(int j=i-1; j >0 ; j --) {
				if (arr[j] < arr[j-1] )swap(j);
			}
		}
	}
	
	
	public static void print() {
		for(int i : arr) {
			System.out.println(i);
		}
	}
	
	public static void main(String[] args) {
		createArr();
		doSort();
		print();
		
		
	}
}
